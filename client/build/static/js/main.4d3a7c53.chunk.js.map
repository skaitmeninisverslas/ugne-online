{"version":3,"sources":["components/helpers/constants.js","reducers/core.js","components/actions/actions.js","components/helpers/apiCalls.js","components/hooks/usePostsData.js","components/messages/forms.js","components/components/SubscriptionForm.js","components/Footer.js","components/hooks/useAuthentication.js","components/Header.js","components/hooks/useCategoriesData.js","components/hooks/useMenuData.js","components/hooks/usePagesData.js","PageContext.js","components/Homepage.js","components/admin/components/modals/AddEditCategoryModal.js","components/admin/components/modals/DeleteModal.js","components/admin/Categories.js","components/admin/components/modals/components/SeoInputs.js","components/admin/components/modals/AddEditPostPageModal.js","components/admin/Posts.js","components/hooks/useUserData.js","components/admin/User.js","components/admin/Menu.js","components/admin/Subscribers.js","components/hooks/useSubscribersData.js","components/admin/Pages.js","components/hooks/useCommentsData.js","components/admin/Comments.js","components/admin/Admin.js","components/Login.js","components/Post.js","components/Page.js","components/Category.js","App.js","index.js"],"names":["API_BASE","process","INSTAGRAM_LINK","itemNameFromLink","location","pathname","replace","setLocalStorageForComponent","savedComponent","localStorage","getItem","JSON","parse","commentDate","date","Date","toLocaleString","month","day","year","hour","minute","postDate","getFileFromInput","event","currentTarget","files","createUrlForLocalImage","item","URL","createObjectURL","trimmedLocalImageUrl","substring","bufferImageToString","mimetype","image","Buffer","from","toString","CoreReducerContext","createContext","initialData","reducer","state","action","type","id","call","payload","CoreReducerProvider","children","useReducer","dispatch","contextValue","useMemo","Provider","value","ACTIONS","DELETE_CAT","GET_CAT","EDIT_CAT","CREATE_CAT","SET_DATA","CREATE_PAGE","GET_PAGE","EDIT_PAGE","DELETE_PAGE","CURRENT_PAGE","CREATE_POST","GET_POST","EDIT_POST","DELETE_POST","CURRENT_POST","SAVE_COMMENT","DELETE_COMMENT","GET_COMMENTS","CURRENT_COMMENT","SUBSCRIBE","DELETE_SUBSCRIBER","GET_SUBSCRIBERS","CURRENT_SUBSCRIBER","GET_MENU","GET_USER","deletePost","get","createPost","data","post","editPost","deletePage","createPage","editPage","deleteCategory","createCategory","editCategory","deleteComment","deleteSubscriber","getSubscribers","headers","usePostsData","useState","updateData","setUpdateData","useContext","posts","useEffect","then","response","postsSortedByDescendingDate","reverse","forms","SUBSCRIBED","USER_EXISTS","USER_EDITED","MENU_EDITED","NOT_SAVED","SubscriptionForm","setResponse","initialValues","subscribe","onSubmit","values","setFieldValue","res","catch","error","submitForm","className","name","placeholder","required","messages","onClick","Footer","categories","menu","pages","isLoading","href","socials","instagram","facebook","map","category","key","title","page","useAuthentication","componentMounted","useRef","authenticated","authResponse","current","fetchData","Header","addClass","setAddClass","isShow","style","marginTop","src","file","alt","about","useCategoriesData","useMenuData","usePagesData","PageContext","React","PageProvider","Homepage","postCategory","find","_id","backgroundImage","createdAt","AddEditCategoryModal","setIsAddEditOpen","isEdit","onModalClose","top","left","right","bottom","position","overflowY","overflowX","backdropFilter","backgroundColor","DeleteModal","setIsDeleteOpen","role","background","borderLeft","color","aria-hidden","Categories","isDeleteOpen","setIsEdit","isAddEditOpen","isEmpty","setCurrentCategory","SeoInputs","setSelectedOgImage","selectedOgImage","width","onChange","htmlFor","AddEditPostPageModal","content","component","isSeoData","Boolean","metitle","medescription","ogimage","ogtitle","ogdescription","isSeoNeeded","setIsSeoNeeded","selectedImage","setSelectedImage","isPage","isPosts","generalInitialValues","seoInitialValues","description","subtitle","form","FormData","Object","entries","forEach","append","setValues","as","cols","rows","checked","Posts","useUserData","user","User","height","Menu","Subscribers","subscribers","subscriber","useSubscribersData","email","Pages","useCommentsData","comments","comment","Comments","filter","art","Admin","setComponent","history","useHistory","push","setItem","stringify","setButtonActive","activeComponent","border","listStyleType","components","Login","password","Post","feed","setFeed","useLocation","currentPost","relatedPosts","slice","currentPostComments","currentPostCategory","firstPostInArray","first","method","author","sidebar","permalink","media_url","Page","currentPage","Category","currentCategory","categoryPosts","App","exact","path","render","ReactDOM","hydrate","document","getElementById"],"mappings":"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","file":"static/js/main.4d3a7c53.chunk.js","sourcesContent":["// API endpoints\r\n\r\n// INSTAGRAM API\r\nconst access_token = process.env.REACT_APP_INSTAGRAM_TOKEN;\r\nconst user_id = process.env.REACT_APP_INSTAGRAM_USER_ID;\r\nexport const API_BASE = process.env.REACT_APP_API_BASE_URL;\r\nexport const INSTAGRAM_LINK = `https://graph.instagram.com/v11.0/${user_id}/media?fields=media_url,permalink&access_token=${access_token}`;\r\n\r\n// HELPERS\r\nexport const itemNameFromLink = (location) =>\r\n  location.pathname.replace(/^\\/[\\w\\d]+\\//, \"\");\r\n\r\nexport const setLocalStorageForComponent = () => {\r\n  const savedComponent = localStorage.getItem(\"component\");\r\n  const initialValue = JSON.parse(savedComponent);\r\n  return initialValue || \"posts\";\r\n};\r\n\r\nexport const commentDate = (date) =>\r\n  new Date(date).toLocaleString(\"en-gb\", {\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n    year: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n  });\r\nexport const postDate = (date) =>\r\n  new Date(date).toLocaleString(\"en-gb\", {\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  });\r\n\r\n// IMAGES\r\nexport const getFileFromInput = (event) => event.currentTarget.files[0];\r\nexport const createUrlForLocalImage = (item) => URL.createObjectURL(item);\r\nexport const trimmedLocalImageUrl = (item) =>\r\n  createUrlForLocalImage(item).substring(5);\r\nexport const bufferImageToString = (mimetype, image) =>\r\n  `data:image/webp;base64,${new Buffer.from(image).toString(\"base64\")}`;\r\n","import React, { createContext, useMemo, useReducer } from \"react\";\r\n\r\nexport const CoreReducerContext = createContext();\r\n\r\nconst initialData = {};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case action.type:\r\n      return (\r\n        action.id && action.call\r\n          ? action.call(action.id, action.payload)\r\n          : !action.id && action.call\r\n          ? action.call(action.payload)\r\n          : null,\r\n        { ...state, ...action.payload }\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CoreReducerProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialData);\r\n\r\n  const contextValue = useMemo(() => {\r\n    return { state, dispatch };\r\n  }, [state, dispatch]);\r\n\r\n  return (\r\n    <CoreReducerContext.Provider value={contextValue}>\r\n      {children}\r\n    </CoreReducerContext.Provider>\r\n  );\r\n};\r\n","export const ACTIONS = {\r\n  CATEGORIES: {\r\n    DELETE_CAT: \"DELETE_CAT\",\r\n    GET_CAT: \"GET_CAT\",\r\n    EDIT_CAT: \"EDIT_CAT\",\r\n    CREATE_CAT: \"CREATE_CAT\",\r\n    SET_DATA: \"SET_DATA\",\r\n  },\r\n  PAGES: {\r\n    CREATE_PAGE: \"CREATE_PAGE\",\r\n    GET_PAGE: \"GET_PAGE\",\r\n    EDIT_PAGE: \"EDIT_PAGE\",\r\n    DELETE_PAGE: \"DELETE_PAGE\",\r\n    CURRENT_PAGE: \"CURRENT_PAGE\",\r\n  },\r\n  POSTS: {\r\n    CREATE_POST: \"CREATE_POST\",\r\n    GET_POST: \"GET_POST\",\r\n    EDIT_POST: \"EDIT_POST\",\r\n    DELETE_POST: \"DELETE_POST\",\r\n    CURRENT_POST: \"CURRENT_POST\",\r\n  },\r\n  COMMENTS: {\r\n    SAVE_COMMENT: \"SAVE_COMMENT\",\r\n    DELETE_COMMENT: \"DELETE_COMMENT\",\r\n    GET_COMMENTS: \"GET_COMMENTS\",\r\n    CURRENT_COMMENT: \"CURRENT_COMMENT\",\r\n  },\r\n  SUBSCRIBERS: {\r\n    SUBSCRIBE: \"SUBSCRIBE\",\r\n    DELETE_SUBSCRIBER: \"DELETE_SUBSCRIBER\",\r\n    GET_SUBSCRIBERS: \"GET_SUBSCRIBERS\",\r\n    CURRENT_SUBSCRIBER: \"CURRENT_SUBSCRIBER\",\r\n  },\r\n  MENU: {\r\n    GET_MENU: \"GET_MENU\",\r\n  },\r\n  USER: {\r\n    GET_USER: \"GET_USER\",\r\n  },\r\n  AUTHENTICATION: \"AUTHENTICATION\",\r\n};\r\n","import axios, { get, post } from \"axios\";\r\n\r\nimport { API_BASE, INSTAGRAM_LINK } from \"./constants\";\r\n\r\n// CORE CALL\r\nexport const coreCall = (calls) => axios.all(calls);\r\nexport const spreadResponseForMultipleCalls = (response) =>\r\n  axios.spread(response);\r\n\r\nexport const getInstagramFeed = () =>\r\n  get(INSTAGRAM_LINK, {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n// ADD,EDIT,DELETE POST CALLS\r\n// POSTS\r\nexport const deletePost = (id) => get(`${API_BASE}/api/post/delete/${id}`);\r\nexport const createPost = (data) => {\r\n  return post(`${API_BASE}/api/posts/store`, data);\r\n};\r\nexport const editPost = (id, data) =>\r\n  post(`${API_BASE}/api/post/edit/${id}`, data);\r\nexport const getPosts = () =>\r\n  get(`${API_BASE}/api/posts/get`, {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n// PAGES\r\nexport const deletePage = (id) => get(`${API_BASE}/api/page/delete/${id}`);\r\nexport const createPage = (data) => post(`${API_BASE}/api/page/store`, data);\r\nexport const editPage = (id, data) =>\r\n  post(`${API_BASE}/api/page/edit/${id}`, data);\r\nexport const getPages = () =>\r\n  get(`${API_BASE}/api/pages/get`, {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n// CATEGORIES\r\nexport const deleteCategory = (id) =>\r\n  get(`${API_BASE}/api/category/delete/${id}`);\r\nexport const createCategory = (data) =>\r\n  post(`${API_BASE}/api/category/store`, data);\r\nexport const editCategory = (id, data) =>\r\n  post(`${API_BASE}/api/category/change/${id}`, data);\r\nexport const getCategories = () =>\r\n  get(`${API_BASE}/api/categories/get`, {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n// COMMENTS\r\nexport const deleteComment = (id) =>\r\n  get(`${API_BASE}/api/comments/delete/${id}`);\r\nexport const getComments = () =>\r\n  get(`${API_BASE}/api/comments/get`, {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n// SUBSCRIBERS\r\nexport const deleteSubscriber = (id) =>\r\n  get(`${API_BASE}/api/subscribers/delete/${id}`);\r\nexport const createSubscriber = (data) =>\r\n  post(`${API_BASE}/api/subscriber/store`, data);\r\nexport const getSubscribers = () =>\r\n  get(`${API_BASE}/api/subscribers/get`, {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n// MENU\r\nexport const editMenu = (id, data) =>\r\n  post(`${API_BASE}/api/menu/edit/${id}`, data);\r\nexport const getMenuData = () =>\r\n  get(`${API_BASE}/api/menu/get`, {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n// USERS\r\nexport const editUser = (data) => post(`${API_BASE}/api/user/edit`, data);\r\nexport const login = (data) => post(`${API_BASE}/api/users/login`, data);\r\nexport const getUserData = () =>\r\n  get(`${API_BASE}/api/user/get`, {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { CoreReducerContext } from \"../../reducers/core\";\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { getPosts } from \"../helpers/apiCalls\";\r\n\r\nexport const usePostsData = () => {\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const { state, dispatch } = useContext(CoreReducerContext);\r\n\r\n  const { posts, post } = state;\r\n\r\n  useEffect(() => {\r\n    getPosts().then((response) => {\r\n      const postsSortedByDescendingDate = response.data.post.reverse();\r\n      dispatch({\r\n        type: ACTIONS.POSTS.GET_POST,\r\n        payload: {\r\n          posts: postsSortedByDescendingDate,\r\n        },\r\n      });\r\n\r\n      setUpdateData(false);\r\n    });\r\n  }, [updateData, dispatch]);\r\n\r\n  return { posts, post, dispatch, setUpdateData };\r\n};\r\n","export const forms = {\r\n  SUBSCRIBED: \"Successfuly subscribed for news!\",\r\n  USER_EXISTS: \"User subscription already exists\",\r\n  USER_EDITED: \"User information saved\",\r\n  MENU_EDITED: \"Information has been saved\",\r\n  NOT_SAVED: \"An error ocurred, data is not saved\",\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nimport * as messages from \"../messages/forms\";\r\nimport { createSubscriber } from \"../helpers/apiCalls\";\r\n\r\nexport const SubscriptionForm = () => {\r\n  const [response, setResponse] = useState();\r\n\r\n  const handleSubmitForm = (values, { setFieldValue }) => {\r\n    createSubscriber(values)\r\n      .then((res) => {\r\n        setResponse(res.data);\r\n        setFieldValue(\"subscribe\", \"\");\r\n      })\r\n      .catch((error) => {\r\n        setResponse(error.response.data);\r\n        setFieldValue(\"subscribe\", \"\");\r\n      });\r\n  };\r\n\r\n  const initialValues = { subscribe: \"\" };\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={handleSubmitForm}>\r\n      {({ submitForm }) => (\r\n        <Fragment>\r\n          <Form>\r\n            <Field\r\n              className=\"FOOTER__subscribe-input\"\r\n              type=\"email\"\r\n              name=\"subscribe\"\r\n              placeholder=\"Email Address\"\r\n              required\r\n            />\r\n\r\n            {response && (\r\n              <div id=\"message\" className=\"FOOTER__information-text mt-0\">\r\n                {messages.forms[response]}\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              onClick={submitForm}\r\n              className=\"FOOTER__subscribe-button\"\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </Form>\r\n        </Fragment>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport { SubscriptionForm } from \"./components/SubscriptionForm\";\r\n\r\nexport const Footer = ({ categories, menu, pages }) => {\r\n  const isLoading = !categories || !menu || !pages;\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && (\r\n        <div className=\"FOOTER\">\r\n          <div className=\"FOOTER__information\">\r\n            <h2 className=\"FOOTER__information-title\">Subscribe</h2>\r\n            <p className=\"FOOTER__information-text\">\r\n              Get updates on my lifestyle!\r\n            </p>\r\n          </div>\r\n          <div className=\"FOOTER__subscribe\">\r\n            <SubscriptionForm />\r\n          </div>\r\n          <div className=\"MENU__information-social FOOTER__social\">\r\n            <a\r\n              className=\"MENU__information-margin\"\r\n              href={menu.socials.instagram}\r\n            >\r\n              <i className=\"fab fa-instagram\"></i>\r\n            </a>\r\n            <a href={menu.socials.facebook}>\r\n              <i className=\"fab fa-facebook\"></i>\r\n            </a>\r\n          </div>\r\n          <div className=\"FOOTER__copyright\">Created by Mantas Jakevicius</div>\r\n          <div className=\"FOOTER__menu\">\r\n            <ul>\r\n              {categories.map((category, key) => (\r\n                <li className=\"FOOTER__menu-item\" key={key}>\r\n                  <a href={`/categories/${category.title}`}>{category.title}</a>\r\n                </li>\r\n              ))}\r\n              {pages.map((page, key) => (\r\n                <li className=\"FOOTER__menu-item\" key={key}>\r\n                  <a href={`/page/${page.title}`}>{page.title}</a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { CoreReducerContext } from \"../../reducers/core\";\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { getSubscribers } from \"../helpers/apiCalls\";\r\n\r\nexport const useAuthentication = () => {\r\n  const [updateData, setUpdateData] = useState(false);\r\n\r\n  const { state, dispatch } = useContext(CoreReducerContext);\r\n  const componentMounted = useRef(true);\r\n\r\n  const { authenticated } = state;\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const authResponse = await getSubscribers();\r\n\r\n      if (componentMounted.current) {\r\n        dispatch({\r\n          type: ACTIONS.AUTHENTICATION,\r\n          payload: { authenticated: authResponse.data.authenticated },\r\n        });\r\n        setUpdateData(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n\r\n    return () => {\r\n      componentMounted.current = false;\r\n    };\r\n  }, [updateData, dispatch]);\r\n\r\n  return { authenticated, setUpdateData };\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\n\r\nimport { bufferImageToString } from \"./helpers/constants\";\r\nimport { useAuthentication } from \"./hooks/useAuthentication\";\r\n\r\nexport const Header = ({ menu, categories, pages }) => {\r\n  const [addClass, setAddClass] = useState(false);\r\n  const { authenticated } = useAuthentication();\r\n\r\n  const toggle = () => {\r\n    setAddClass(!addClass);\r\n  };\r\n\r\n  const isShow = addClass ? \"show\" : \"hide\";\r\n\r\n  const isLoading = !menu || !categories || !pages;\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && (\r\n        <div\r\n          className=\"TOPBAR\"\r\n          style={{ marginTop: authenticated ? \"44px\" : 0 }}\r\n        >\r\n          <div onClick={toggle} className=\"TOPBAR__button\">\r\n            <span className={`cross ${isShow}`}></span>\r\n            <span className={`open ${isShow}`}></span>\r\n            <span className={`cross ${isShow}`}></span>\r\n          </div>\r\n          <a className=\"TOPBAR__branding\" href=\"/\">\r\n            Demo\r\n          </a>\r\n          <div className=\"TOPBAR__socials\">\r\n            <a href={menu.socials.instagram}>\r\n              <i className=\"fab fa-instagram\"></i>\r\n            </a>\r\n            <a className=\"TOPBAR__socials-border\" href={menu.socials.facebook}>\r\n              <i className=\"fab fa-facebook\"></i>\r\n            </a>\r\n            <a className=\"search\" href={menu.socials.facebook}>\r\n              <i className=\"fas fa-search\"></i>\r\n            </a>\r\n          </div>\r\n          <div className={`MENU ${isShow}`}>\r\n            <div className=\"MENU__first\">\r\n              <ul>\r\n                {categories.map((category, key) => (\r\n                  <li key={key} className=\"MENU__item\">\r\n                    <a href={`/categories/${category.title}`}>\r\n                      {category.title}\r\n                    </a>\r\n                  </li>\r\n                ))}\r\n\r\n                {pages.map((page, key) => (\r\n                  <li key={key} className=\"MENU__item\">\r\n                    <a href={`/page/${page.title}`}>{page.title}</a>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"MENU__second\">\r\n              <div className=\"MENU__information\">\r\n                <div className=\"MENU__information-image\">\r\n                  <img\r\n                    className=\"rounded-circle\"\r\n                    src={bufferImageToString(\r\n                      menu.image.mimetype,\r\n                      menu.image.file.data\r\n                    )}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"MENU__information-heading\">{menu.title}</div>\r\n                <div className=\"MENU__information-text\">{menu.about}</div>\r\n                <div className=\"MENU__information-social\">\r\n                  <a\r\n                    className=\"MENU__information-margin\"\r\n                    href={menu.socials.instagram}\r\n                  >\r\n                    <i className=\"fab fa-instagram\"></i>\r\n                  </a>\r\n                  <a href={menu.socials.facebook}>\r\n                    <i className=\"fab fa-facebook\"></i>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {authenticated && (\r\n            <div className=\"TOPBAR__admin\">\r\n              <a href={\"/admin\"} className=\"TOPBAR__admin-link\">\r\n                Dashboard\r\n              </a>\r\n              <a href=\"/api/auth/logout\" className=\"TOPBAR__admin-logout\">\r\n                <i className=\"fas fa-sign-out-alt text-white\"></i>\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { CoreReducerContext } from \"../../reducers/core\";\r\n\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { getCategories } from \"../helpers/apiCalls\";\r\n\r\nexport const useCategoriesData = () => {\r\n  const [updateData, setUpdateData] = useState(false);\r\n\r\n  const { state, dispatch } = useContext(CoreReducerContext);\r\n\r\n  const { categories, category } = state;\r\n\r\n  useEffect(() => {\r\n    getCategories().then((res) => {\r\n      dispatch({\r\n        type: ACTIONS.CATEGORIES.GET_CAT,\r\n        payload: { categories: res.data.categories },\r\n      });\r\n      setUpdateData(false);\r\n    });\r\n  }, [updateData, dispatch]);\r\n\r\n  return { categories, category, dispatch, setUpdateData };\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { CoreReducerContext } from \"../../reducers/core\";\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { getMenuData } from \"../helpers/apiCalls\";\r\n\r\nexport const useMenuData = () => {\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const { state, dispatch } = useContext(CoreReducerContext);\r\n\r\n  const { menu } = state;\r\n\r\n  useEffect(() => {\r\n    getMenuData().then((res) => {\r\n      dispatch({\r\n        type: ACTIONS.MENU.GET_MENU,\r\n        payload: { menu: res.data.menu[0] },\r\n      });\r\n      setUpdateData(false);\r\n    });\r\n  }, [updateData, dispatch]);\r\n\r\n  return { menu, dispatch, setUpdateData };\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { CoreReducerContext } from \"../../reducers/core\";\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { getPages } from \"../helpers/apiCalls\";\r\n\r\nexport const usePagesData = () => {\r\n  const [updateData, setUpdateData] = useState(false);\r\n\r\n  const { state, dispatch } = useContext(CoreReducerContext);\r\n\r\n  const { pages, page } = state;\r\n\r\n  useEffect(() => {\r\n    getPages().then((res) => {\r\n      dispatch({\r\n        type: ACTIONS.PAGES.GET_PAGE,\r\n        payload: { pages: res.data.pages },\r\n      });\r\n      setUpdateData(false);\r\n    });\r\n  }, [updateData, dispatch]);\r\n\r\n  return { pages, page, dispatch, setUpdateData };\r\n};\r\n","import React from \"react\";\r\nimport { Footer } from \"./components/Footer\";\r\n\r\nimport { Header } from \"./components/Header\";\r\nimport { useCategoriesData } from \"./components/hooks/useCategoriesData\";\r\nimport { useMenuData } from \"./components/hooks/useMenuData\";\r\nimport { usePagesData } from \"./components/hooks/usePagesData\";\r\n\r\nexport const PageContext = React.createContext();\r\n\r\nexport const PageProvider = ({ children }) => {\r\n  const { menu } = useMenuData();\r\n  const { categories } = useCategoriesData();\r\n  const { pages } = usePagesData();\r\n\r\n  return (\r\n    <PageContext.Provider value={{ menu, categories, pages }}>\r\n      <Header menu={menu} categories={categories} pages={pages} />\r\n      {children}\r\n      <Footer menu={menu} categories={categories} pages={pages} />\r\n    </PageContext.Provider>\r\n  );\r\n};\r\n","import React, { Fragment, useContext } from \"react\";\r\n\r\nimport { bufferImageToString, postDate } from \"./helpers/constants\";\r\nimport { usePostsData } from \"./hooks/usePostsData\";\r\nimport { PageContext } from \"../PageContext\";\r\n\r\nexport const Homepage = () => {\r\n  const { posts } = usePostsData();\r\n  const { categories } = useContext(PageContext);\r\n\r\n  const isLoading = !posts || !categories;\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading ? (\r\n        <div className=\"CONTENT\">\r\n          <ul className=\"CONTENT__blog\">\r\n            {posts.map((item, key) => {\r\n              const postCategory = categories.find(\r\n                (category) => category._id === item.category\r\n              );\r\n\r\n              return (\r\n                <li className=\"CONTENT__blog-post\" key={key} value={item.title}>\r\n                  <a\r\n                    className=\"CONTENT__blog-post-image\"\r\n                    href={`/post/${item.title}`}\r\n                    style={{\r\n                      backgroundImage: `url(${bufferImageToString(\r\n                        item.image.mimetype,\r\n                        item.image.file.data\r\n                      )})`,\r\n                    }}\r\n                  >\r\n                    {\"\"}\r\n                  </a>\r\n                  <p className=\"CONTENT__blog-post-date\">\r\n                    {postDate(item.createdAt)}\r\n                  </p>\r\n                  <a\r\n                    className=\"CONTENT__blog-post-link\"\r\n                    href={`/post/${item.title}`}\r\n                  >\r\n                    <h2 className=\"CONTENT__blog-post-title\">{item.title}</h2>\r\n                  </a>\r\n\r\n                  <a\r\n                    className=\"CONTENT__blog-post-category\"\r\n                    href={`/categories/${postCategory.title}`}\r\n                    key={key}\r\n                  >\r\n                    {postCategory.title}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <span className=\"LOADING\">Loading...</span>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nexport const AddEditCategoryModal = ({\r\n  data,\r\n  setIsAddEditOpen,\r\n  isEdit,\r\n  dispatch,\r\n  setUpdateData,\r\n  action,\r\n  call,\r\n}) => {\r\n  const onModalClose = () => {\r\n    setIsAddEditOpen(false);\r\n  };\r\n\r\n  const handleSubmitForm = (values) => {\r\n    dispatch({\r\n      type: action,\r\n      call: call,\r\n      id: values._id,\r\n      payload: values,\r\n    });\r\n    setUpdateData(true);\r\n    onModalClose();\r\n  };\r\n\r\n  const initialValues = isEdit ? data : { title: \"\" };\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={handleSubmitForm}>\r\n      {({ submitForm }) => (\r\n        <div\r\n          style={{\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            position: \"fixed\",\r\n            overflowY: \"scroll\",\r\n            overflowX: \"hidden\",\r\n            backdropFilter: \"blur(0.375rem)\",\r\n            backgroundColor: \"rgba(247,249,252, 0.9)\",\r\n          }}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title text-center\">\r\n                  {isEdit\r\n                    ? `Edit category: ${data && data.title}`\r\n                    : \"Create category\"}\r\n                </h5>\r\n                <button type=\"button\" className=\"close\" onClick={onModalClose}>\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"modal-body\">\r\n                <Form>\r\n                  <div className=\"form-group\">\r\n                    <label>Category title</label>\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      placeholder=\"Title\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={onModalClose}\r\n                >\r\n                  Cancel\r\n                </button>\r\n\r\n                <button\r\n                  className=\"btn btn-success\"\r\n                  type=\"submit\"\r\n                  onClick={submitForm}\r\n                >\r\n                  <i className=\"fas fa-save\"></i>\r\n                  {isEdit ? \" Save\" : \" Post\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const DeleteModal = ({\r\n  id,\r\n  title,\r\n  setIsDeleteOpen,\r\n  setUpdateData,\r\n  dispatch,\r\n  action,\r\n  call,\r\n}) => {\r\n  const onModalClose = () => {\r\n    setIsDeleteOpen(false);\r\n  };\r\n\r\n  const handleSubmitForm = () => {\r\n    dispatch({\r\n      type: action,\r\n      call: call,\r\n      payload: id,\r\n    });\r\n    setUpdateData(true);\r\n    onModalClose();\r\n  };\r\n\r\n  return (\r\n    id &&\r\n    title && (\r\n      <div\r\n        style={{\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          position: \"fixed\",\r\n          overflowY: \"scroll\",\r\n          overflowX: \"hidden\",\r\n          backdropFilter: \"blur(0.375rem)\",\r\n          backgroundColor: \"rgba(247,249,252, 0.9)\",\r\n        }}\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div\r\n              className=\"modal-header\"\r\n              style={{ background: \"#FFF1F1\", borderLeft: \"5px solid #DC3545\" }}\r\n            >\r\n              <h5\r\n                className=\"modal-title text-center\"\r\n                style={{ color: \"#DC3545\" }}\r\n              >\r\n                <i\r\n                  className=\"fas fa-exclamation-circle\"\r\n                  style={{ color: \"#DC3545\" }}\r\n                ></i>{\" \"}\r\n                Warning!\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                onClick={() => setIsDeleteOpen(false)}\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              Are you sure, do you want to delete {title}\r\n            </div>\r\n            <div className=\"modal-footer text-center d-flex justify-content-center\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => setIsDeleteOpen(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleSubmitForm}\r\n                className=\"btn btn-danger\"\r\n              >\r\n                <i className=\"fas fa-trash\"></i> Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { AddEditCategoryModal } from \"./components/modals/AddEditCategoryModal\";\r\nimport { DeleteModal } from \"./components/modals/DeleteModal\";\r\nimport {\r\n  createCategory,\r\n  deleteCategory,\r\n  editCategory,\r\n} from \"../helpers/apiCalls\";\r\nimport { useCategoriesData } from \"../hooks/useCategoriesData\";\r\n\r\nconst {\r\n  CATEGORIES: { EDIT_CAT, DELETE_CAT, CREATE_CAT, SET_DATA },\r\n} = ACTIONS;\r\n\r\nexport const Categories = () => {\r\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isAddEditOpen, setIsAddEditOpen] = useState(false);\r\n\r\n  const { categories, category, dispatch, setUpdateData } = useCategoriesData();\r\n\r\n  const isLoading = !categories || isEmpty(categories);\r\n\r\n  const setCurrentCategory = (payload) => {\r\n    dispatch({\r\n      type: SET_DATA,\r\n      payload: payload,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && (\r\n        <div>\r\n          <h2 className=\"text-center\">Categories</h2>\r\n\r\n          <button\r\n            className=\"btn btn-light mt-4\"\r\n            onClick={() => {\r\n              setIsAddEditOpen(true);\r\n              setIsEdit(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> New Category\r\n          </button>\r\n\r\n          <ul className=\"mt-4 p-0\">\r\n            {categories.map((category, key) => (\r\n              <li className=\"card mt-2 p-3\" key={key}>\r\n                <div className=\"card-body row pt-0 pb-0\">\r\n                  <div className=\"card-title font-weight-bold\">\r\n                    {category.title}\r\n                  </div>\r\n\r\n                  <div className=\"d-flex flex-column ml-auto border-left pl-4\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => {\r\n                        setCurrentCategory({ category });\r\n                        setIsAddEditOpen(true);\r\n                        setIsEdit(true);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-pen\"></i>\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"btn btn-danger mt-2\"\r\n                      onClick={() => {\r\n                        setCurrentCategory({\r\n                          category: {\r\n                            id: category._id,\r\n                            title: `category: ${category.title}`,\r\n                          },\r\n                        });\r\n                        setIsDeleteOpen(true);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          {isAddEditOpen && (\r\n            <AddEditCategoryModal\r\n              data={category}\r\n              setIsAddEditOpen={setIsAddEditOpen}\r\n              isEdit={isEdit}\r\n              dispatch={dispatch}\r\n              action={isEdit ? EDIT_CAT : CREATE_CAT}\r\n              call={isEdit ? editCategory : createCategory}\r\n              setUpdateData={setUpdateData}\r\n            />\r\n          )}\r\n\r\n          {isDeleteOpen && (\r\n            <DeleteModal\r\n              id={category.id}\r\n              title={category.title}\r\n              setIsDeleteOpen={setIsDeleteOpen}\r\n              dispatch={dispatch}\r\n              action={DELETE_CAT}\r\n              call={deleteCategory}\r\n              setUpdateData={setUpdateData}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Field } from \"formik\";\r\nimport {\r\n  bufferImageToString,\r\n  createUrlForLocalImage,\r\n  getFileFromInput,\r\n  trimmedLocalImageUrl,\r\n} from \"../../../../helpers/constants\";\r\n\r\nexport const SeoInputs = ({\r\n  image,\r\n  isEdit,\r\n  setSelectedOgImage,\r\n  selectedOgImage,\r\n  setFieldValue,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group mt-5\">\r\n      <label>SEO</label>\r\n      <Field\r\n        className=\"form-control\"\r\n        type=\"text\"\r\n        name=\"metitle\"\r\n        placeholder=\"Meta title\"\r\n      />\r\n      <Field\r\n        className=\"form-control mt-3\"\r\n        type=\"text\"\r\n        name=\"medescription\"\r\n        placeholder=\"Meta description\"\r\n      />\r\n      <Field\r\n        className=\"form-control mt-3\"\r\n        type=\"text\"\r\n        name=\"ogtitle\"\r\n        placeholder=\"og:title\"\r\n      />\r\n      <Field\r\n        className=\"form-control mt-3\"\r\n        type=\"text\"\r\n        name=\"ogdescription\"\r\n        placeholder=\"og:description\"\r\n      />\r\n\r\n      {isEdit && image && (\r\n        <img\r\n          src={bufferImageToString(image.mimetype, image.file.data)}\r\n          className=\"rounded d-block mx-auto mt-3\"\r\n          width=\"200\"\r\n          alt=\"\"\r\n        />\r\n      )}\r\n\r\n      {selectedOgImage && (\r\n        <img\r\n          className=\"rounded d-block mx-auto my-3\"\r\n          width=\"200\"\r\n          src={createUrlForLocalImage(selectedOgImage)}\r\n          alt=\"\"\r\n        />\r\n      )}\r\n\r\n      <div className={`input-group ${!selectedOgImage && \"mt-3\"}`}>\r\n        <div className=\"input-group-prepend\">\r\n          <button\r\n            className=\"input-group-text\"\r\n            onClick={() => selectedOgImage && setSelectedOgImage(null)}\r\n          >\r\n            {selectedOgImage ? \"Remove\" : \"Upload\"}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"form-group custom-file\">\r\n          <input\r\n            className=\"custom-file-input\"\r\n            required\r\n            type=\"file\"\r\n            name=\"ogimage\"\r\n            onChange={(event) => {\r\n              setFieldValue(\"ogimage\", getFileFromInput(event));\r\n              setSelectedOgImage(getFileFromInput(event));\r\n            }}\r\n          />\r\n          <label\r\n            className=\"custom-file-label overflow-hidden\"\r\n            htmlFor=\"customFile\"\r\n          >\r\n            {selectedOgImage\r\n              ? trimmedLocalImageUrl(selectedOgImage)\r\n              : \"Choose image\"}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nimport {\r\n  trimmedLocalImageUrl,\r\n  createUrlForLocalImage,\r\n  getFileFromInput,\r\n  bufferImageToString,\r\n} from \"../../../helpers/constants\";\r\nimport { SeoInputs } from \"./components/SeoInputs\";\r\n\r\nexport const AddEditPostPageModal = ({\r\n  categories,\r\n  data,\r\n  setIsAddEditOpen,\r\n  isEdit,\r\n  dispatch,\r\n  action,\r\n  call,\r\n  setUpdateData,\r\n}) => {\r\n  const { content, component } = data;\r\n\r\n  const isSeoData = Boolean(\r\n    content &&\r\n      (content.metitle ||\r\n        content.medescription ||\r\n        content.ogimage ||\r\n        content.ogtitle ||\r\n        content.ogdescription)\r\n  );\r\n\r\n  const [isSeoNeeded, setIsSeoNeeded] = useState(isSeoData);\r\n  const [selectedImage, setSelectedImage] = useState();\r\n  const [selectedOgImage, setSelectedOgImage] = useState();\r\n\r\n  const isPage = component === \"page\";\r\n  const isPosts = component === \"post\";\r\n\r\n  const onModalClose = () => {\r\n    setIsAddEditOpen(false);\r\n  };\r\n\r\n  const handleSubmitForm = (values) => {\r\n    // Create form data\r\n    let form = new FormData();\r\n    // Add data to formData\r\n    Object.entries(values).forEach(([key, value]) => form.append(key, value));\r\n\r\n    dispatch({\r\n      type: action,\r\n      call: call,\r\n      id: values._id,\r\n      payload: form,\r\n    });\r\n    setUpdateData(true);\r\n    onModalClose();\r\n  };\r\n\r\n  const generalInitialValues = {\r\n    title: \"\",\r\n    content: \"\",\r\n    image: \"\",\r\n  };\r\n\r\n  const seoInitialValues = {\r\n    ogimage: \"\",\r\n    metitle: \"\",\r\n    medescription: \"\",\r\n    ogtitle: \"\",\r\n    ogdescription: \"\",\r\n  };\r\n\r\n  const initialValues = isEdit\r\n    ? content\r\n    : isPosts && categories\r\n    ? {\r\n        ...generalInitialValues,\r\n        category: categories[0]._id,\r\n        description: \"\",\r\n        ...seoInitialValues,\r\n      }\r\n    : isPage && { ...generalInitialValues, ...seoInitialValues, subtitle: \"\" };\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={handleSubmitForm}>\r\n      {({ setFieldValue, submitForm, values, setValues }) => {\r\n        const clearSeoFields = () =>\r\n          setValues({\r\n            ...values,\r\n            ogimage: \"\",\r\n            metitle: \"\",\r\n            medescription: \"\",\r\n            ogtitle: \"\",\r\n            ogdescription: \"\",\r\n          });\r\n\r\n        return (\r\n          <div\r\n            style={{\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              position: \"fixed\",\r\n              overflowY: \"scroll\",\r\n              overflowX: \"hidden\",\r\n              backdropFilter: \"blur(0.375rem)\",\r\n              backgroundColor: \"rgba(247,249,252, 0.9)\",\r\n            }}\r\n          >\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title text-center\">\r\n                    {isEdit\r\n                      ? `Edit ${content.title}`\r\n                      : isPosts\r\n                      ? \"Create New Post\"\r\n                      : \"Create New Page\"}\r\n                  </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={onModalClose}\r\n                  >\r\n                    <span>&times;</span>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                  <Form>\r\n                    <div className=\"form-group\">\r\n                      <label>Title</label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"Title\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    {isPosts && (\r\n                      <Fragment>\r\n                        <div className=\"form-group\">\r\n                          <label>Category</label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            className=\"form-control\"\r\n                            name=\"category\"\r\n                          >\r\n                            {categories.map((item, key) => (\r\n                              <option key={key} value={item._id}>\r\n                                {item.title}\r\n                              </option>\r\n                            ))}\r\n                          </Field>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label>Description</label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            placeholder=\"Description\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </Fragment>\r\n                    )}\r\n\r\n                    {isPage && (\r\n                      <div className=\"form-group\">\r\n                        <label>Subtitle</label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"subtitle\"\r\n                          placeholder=\"Subtitle\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>Content</label>\r\n                      <Field\r\n                        as=\"textarea\"\r\n                        className=\"form-control\"\r\n                        name=\"content\"\r\n                        placeholder=\"Content ...\"\r\n                        required\r\n                        cols=\"30\"\r\n                        rows=\"10\"\r\n                      />\r\n\r\n                      {isEdit && content.image && (\r\n                        <img\r\n                          src={bufferImageToString(\r\n                            content.image.mimetype,\r\n                            content.image.file.data\r\n                          )}\r\n                          className=\"rounded d-block mx-auto mt-3\"\r\n                          width=\"200\"\r\n                          alt=\"\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n\r\n                    {selectedImage && (\r\n                      <img\r\n                        className=\"rounded d-block mx-auto my-3\"\r\n                        width=\"200\"\r\n                        src={createUrlForLocalImage(selectedImage)}\r\n                        alt=\"\"\r\n                      />\r\n                    )}\r\n\r\n                    <div className={`input-group ${!selectedImage && \"mt-3\"}`}>\r\n                      <div className=\"input-group-prepend\">\r\n                        <button\r\n                          className=\"input-group-text\"\r\n                          onClick={() =>\r\n                            selectedImage && setSelectedImage(null)\r\n                          }\r\n                        >\r\n                          {selectedImage ? \"Remove\" : \"Upload\"}\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div className=\"form-group custom-file\">\r\n                        <input\r\n                          className=\"custom-file-input\"\r\n                          required\r\n                          type=\"file\"\r\n                          name=\"image\"\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"image\", getFileFromInput(event));\r\n                            setSelectedImage(getFileFromInput(event));\r\n                          }}\r\n                        />\r\n                        <label\r\n                          className=\"custom-file-label overflow-hidden\"\r\n                          htmlFor=\"customFile\"\r\n                        >\r\n                          {selectedImage\r\n                            ? trimmedLocalImageUrl(selectedImage)\r\n                            : \"Choose image\"}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group form-check mt-3\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"\r\n                        checked={isSeoNeeded}\r\n                        onChange={() => {\r\n                          setIsSeoNeeded(!isSeoNeeded);\r\n                          clearSeoFields();\r\n                        }}\r\n                      />\r\n                      <label className=\"form-check-label\">\r\n                        SEO data needed\r\n                      </label>\r\n                    </div>\r\n\r\n                    {/* SEO PART */}\r\n                    {isSeoNeeded && (\r\n                      <SeoInputs\r\n                        selectedOgImage={selectedOgImage}\r\n                        image={content.ogimage}\r\n                        isEdit={isEdit}\r\n                        setSelectedOgImage={setSelectedOgImage}\r\n                        setFieldValue={setFieldValue}\r\n                      />\r\n                    )}\r\n                  </Form>\r\n                </div>\r\n                <div className=\"modal-footer d-flex justify-content-center\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={onModalClose}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    type=\"submit\"\r\n                    onClick={submitForm}\r\n                  >\r\n                    <i className=\"fas fa-save\"></i>\r\n                    {isEdit ? \" Save\" : \" Post\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n","import { isEmpty } from \"lodash\";\r\nimport React, { Fragment, useState } from \"react\";\r\n\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { createPost, deletePost, editPost } from \"../helpers/apiCalls\";\r\nimport { useCategoriesData } from \"../hooks/useCategoriesData\";\r\nimport { usePostsData } from \"../hooks/usePostsData\";\r\nimport { AddEditPostPageModal } from \"./components/modals/AddEditPostPageModal\";\r\nimport { DeleteModal } from \"./components/modals/DeleteModal\";\r\n\r\nconst {\r\n  POSTS: { CREATE_POST, EDIT_POST, DELETE_POST, CURRENT_POST },\r\n} = ACTIONS;\r\n\r\nexport const Posts = () => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isAddEditOpen, setIsAddEditOpen] = useState(false);\r\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\r\n\r\n  const { categories } = useCategoriesData();\r\n  const { posts, post, dispatch, setUpdateData } = usePostsData();\r\n\r\n  const isLoading = !posts || isEmpty(posts) || !categories;\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && (\r\n        <div className=\"w-100\">\r\n          <h2 className=\"text-center\">All Posts</h2>\r\n\r\n          <button\r\n            className=\"btn btn-light mt-4\"\r\n            onClick={() => {\r\n              setIsEdit(false);\r\n              setIsAddEditOpen(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> New Post\r\n          </button>\r\n\r\n          <ul className=\"mt-4 p-0\">\r\n            {posts.map((item, key) => {\r\n              const { title, description, _id: id } = item;\r\n              const postCategory = categories.find(\r\n                (category) => category._id === item.category\r\n              );\r\n\r\n              return (\r\n                <li className=\"card mt-2 p-3\" key={key} value={title}>\r\n                  <div className=\"card-body row\">\r\n                    <div className=\"col-10\">\r\n                      <div className=\"card-title border-bottom pb-2 font-weight-bold\">\r\n                        {title}\r\n                      </div>\r\n                      <div className=\"card-subtitle text-muted\">\r\n                        {description}\r\n                      </div>\r\n                      <div className=\"card-subtitle mt-3\" key={key}>\r\n                        <strong>Category: </strong>\r\n                        {postCategory.title}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column ml-auto border-left pl-4 col-2\">\r\n                      <button\r\n                        onClick={() => {\r\n                          dispatch({\r\n                            type: CURRENT_POST,\r\n                            payload: {\r\n                              post: item,\r\n                            },\r\n                          });\r\n                          setIsEdit(true);\r\n                          setIsAddEditOpen(true);\r\n                        }}\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        <i className=\"fas fa-pen\"></i>\r\n                      </button>\r\n\r\n                      <button\r\n                        className=\"btn btn-danger mt-2\"\r\n                        onClick={() => {\r\n                          dispatch({\r\n                            type: CURRENT_POST,\r\n                            payload: {\r\n                              post: {\r\n                                id,\r\n                                title: `post: ${title}`,\r\n                              },\r\n                            },\r\n                          });\r\n                          setIsDeleteOpen(true);\r\n                        }}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n          {isAddEditOpen && (\r\n            <AddEditPostPageModal\r\n              categories={categories}\r\n              data={{ content: post, component: \"post\" }}\r\n              isEdit={isEdit}\r\n              setIsAddEditOpen={setIsAddEditOpen}\r\n              dispatch={dispatch}\r\n              action={isEdit ? EDIT_POST : CREATE_POST}\r\n              call={isEdit ? editPost : createPost}\r\n              setUpdateData={setUpdateData}\r\n            />\r\n          )}\r\n\r\n          {isDeleteOpen && (\r\n            <DeleteModal\r\n              id={post.id}\r\n              title={post.title}\r\n              setIsDeleteOpen={setIsDeleteOpen}\r\n              dispatch={dispatch}\r\n              action={DELETE_POST}\r\n              call={deletePost}\r\n              setUpdateData={setUpdateData}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { CoreReducerContext } from \"../../reducers/core\";\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { getUserData } from \"../helpers/apiCalls\";\r\n\r\nexport const useUserData = () => {\r\n  const [updateData, setUpdateData] = useState(false);\r\n\r\n  const { state, dispatch } = useContext(CoreReducerContext);\r\n\r\n  const { user } = state;\r\n\r\n  useEffect(() => {\r\n    getUserData().then((res) => {\r\n      dispatch({\r\n        type: ACTIONS.USER.GET_USER,\r\n        payload: { user: res.data.user },\r\n      });\r\n\r\n      setUpdateData(false);\r\n    });\r\n  }, [updateData, dispatch]);\r\n\r\n  return { user, dispatch, setUpdateData };\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nimport {\r\n  bufferImageToString,\r\n  createUrlForLocalImage,\r\n  getFileFromInput,\r\n  trimmedLocalImageUrl,\r\n} from \"../helpers/constants\";\r\nimport { editUser } from \"../helpers/apiCalls\";\r\nimport * as messages from \"../messages/forms\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { useUserData } from \"../hooks/useUserData\";\r\n\r\nexport const User = () => {\r\n  const [selectedImage, setSelectedImage] = useState();\r\n  const [response, setResponse] = useState();\r\n\r\n  const { user, setUpdateData } = useUserData();\r\n\r\n  const isLoading = !user || isEmpty(user);\r\n\r\n  const handleSubmitForm = (values) => {\r\n    // Create form data\r\n    let form = new FormData();\r\n    // Add data to formData\r\n    Object.entries(values).forEach(([key, value]) => form.append(key, value));\r\n\r\n    editUser(form)\r\n      .then((res) => {\r\n        setUpdateData(true);\r\n        setSelectedImage(\"\");\r\n        setResponse(res.data);\r\n      })\r\n      .catch((error) => {\r\n        setResponse(error.response.data);\r\n        setSelectedImage(\"\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && (\r\n        <Formik initialValues={user} onSubmit={handleSubmitForm}>\r\n          {({ submitForm, setFieldValue }) => (\r\n            <div className=\"w-100\">\r\n              <h2 className=\"text-center\">User Account</h2>\r\n\r\n              <div className=\"mt-4\">\r\n                <div className=\"modal-header\">\r\n                  {user.image && (\r\n                    <img\r\n                      className=\"rounded-circle\"\r\n                      width=\"75\"\r\n                      height=\"75\"\r\n                      src={bufferImageToString(\r\n                        user.image.mimetype,\r\n                        user.image.file.data\r\n                      )}\r\n                      alt=\"\"\r\n                    />\r\n                  )}\r\n\r\n                  <h5\r\n                    className=\"modal-title text-center\"\r\n                    id=\"exampleModalLabel\"\r\n                  >\r\n                    Edit user account\r\n                  </h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <Form>\r\n                    <div className=\"form-group\">\r\n                      <label>Username</label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"Username\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>Email</label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    {selectedImage && (\r\n                      <img\r\n                        className=\"rounded-circle d-block mx-auto my-3\"\r\n                        width=\"75\"\r\n                        height=\"75\"\r\n                        src={createUrlForLocalImage(selectedImage)}\r\n                        alt=\"\"\r\n                      />\r\n                    )}\r\n\r\n                    <div className={`input-group ${!selectedImage && \"mt-3\"}`}>\r\n                      <div className=\"input-group-prepend\">\r\n                        <button\r\n                          className=\"input-group-text\"\r\n                          onClick={() =>\r\n                            selectedImage && setSelectedImage(null)\r\n                          }\r\n                        >\r\n                          {selectedImage ? \"Remove\" : \"Upload\"}\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div className=\"form-group custom-file\">\r\n                        <input\r\n                          className=\"custom-file-input\"\r\n                          required\r\n                          type=\"file\"\r\n                          name=\"image\"\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"image\", getFileFromInput(event));\r\n                            setSelectedImage(getFileFromInput(event));\r\n                          }}\r\n                        />\r\n                        <label\r\n                          className=\"custom-file-label overflow-hidden\"\r\n                          htmlFor=\"customFile\"\r\n                        >\r\n                          {selectedImage\r\n                            ? trimmedLocalImageUrl(selectedImage)\r\n                            : \"Choose image\"}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n\r\n                {response && (\r\n                  <div id=\"message\" className=\"FOOTER__information-text mt-0\">\r\n                    {messages.forms[response]}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-success\" onClick={submitForm}>\r\n                    <i className=\"fas fa-save\"></i> Save\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nimport {\r\n  bufferImageToString,\r\n  createUrlForLocalImage,\r\n  getFileFromInput,\r\n  trimmedLocalImageUrl,\r\n} from \"../helpers/constants\";\r\nimport { editMenu } from \"../helpers/apiCalls\";\r\nimport * as messages from \"../messages/forms\";\r\nimport { useMenuData } from \"../hooks/useMenuData\";\r\n\r\nexport const Menu = () => {\r\n  const [selectedImage, setSelectedImage] = useState();\r\n  const [response, setResponse] = useState();\r\n\r\n  const { menu, setUpdateData } = useMenuData();\r\n\r\n  const isLoading = !menu || isEmpty(menu);\r\n\r\n  const initialValues = !isLoading && {\r\n    ...menu,\r\n    facebook: menu.socials.facebook,\r\n    instagram: menu.socials.instagram,\r\n  };\r\n\r\n  const handleSubmitForm = (values) => {\r\n    // Create form data\r\n    let form = new FormData();\r\n    // Add data to formData\r\n    Object.entries(values).forEach(([key, value]) => form.append(key, value));\r\n\r\n    editMenu(values._id, form)\r\n      .then((res) => {\r\n        setUpdateData(true);\r\n        setSelectedImage(\"\");\r\n        setResponse(res.data);\r\n      })\r\n      .catch((error) => {\r\n        setResponse(error.response.data);\r\n        setSelectedImage(\"\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && (\r\n        <Formik initialValues={initialValues} onSubmit={handleSubmitForm}>\r\n          {({ submitForm, setFieldValue }) => (\r\n            <div className=\"w-100\">\r\n              <h2 className=\"text-center\">Menu information</h2>\r\n\r\n              <div className=\"mt-4\">\r\n                <div className=\"modal-header\">\r\n                  {menu.image && (\r\n                    <img\r\n                      className=\"rounded-circle\"\r\n                      width=\"75\"\r\n                      height=\"75\"\r\n                      src={bufferImageToString(\r\n                        menu.image.mimetype,\r\n                        menu.image.file.data\r\n                      )}\r\n                      alt=\"\"\r\n                    />\r\n                  )}\r\n                  <h5 className=\"modal-title text-center\">\r\n                    Edit menu information\r\n                  </h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <Form>\r\n                    <div className=\"form-group\">\r\n                      <label>Title</label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"Title\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>Email</label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>Sidebar description</label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"sidebar\"\r\n                        placeholder=\"Sidebar description\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>Facebook</label>\r\n\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"url\"\r\n                        name=\"facebook\"\r\n                        placeholder=\"Facebook URL\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>Instagram</label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"url\"\r\n                        name=\"instagram\"\r\n                        placeholder=\"Instagram URL\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>About</label>\r\n                      <Field\r\n                        as=\"textarea\"\r\n                        className=\"form-control\"\r\n                        name=\"about\"\r\n                        placeholder=\"Content ...\"\r\n                        required\r\n                        cols=\"30\"\r\n                        rows=\"10\"\r\n                      />\r\n                    </div>\r\n\r\n                    {selectedImage && (\r\n                      <img\r\n                        className=\"rounded-circle d-block mx-auto my-3\"\r\n                        width=\"75\"\r\n                        height=\"75\"\r\n                        src={createUrlForLocalImage(selectedImage)}\r\n                        alt=\"\"\r\n                      />\r\n                    )}\r\n\r\n                    <div className={`input-group ${!selectedImage && \"mt-3\"}`}>\r\n                      <div className=\"input-group-prepend\">\r\n                        <button\r\n                          className=\"input-group-text\"\r\n                          onClick={() =>\r\n                            selectedImage && setSelectedImage(null)\r\n                          }\r\n                        >\r\n                          {selectedImage ? \"Remove\" : \"Upload\"}\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div className=\"form-group custom-file\">\r\n                        <input\r\n                          className=\"custom-file-input\"\r\n                          required\r\n                          type=\"file\"\r\n                          name=\"image\"\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"image\", getFileFromInput(event));\r\n                            setSelectedImage(getFileFromInput(event));\r\n                          }}\r\n                        />\r\n                        <label\r\n                          className=\"custom-file-label overflow-hidden\"\r\n                          htmlFor=\"customFile\"\r\n                        >\r\n                          {selectedImage\r\n                            ? trimmedLocalImageUrl(selectedImage)\r\n                            : \"Choose image\"}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n\r\n                {response && (\r\n                  <div id=\"message\" className=\"FOOTER__information-text mt-0\">\r\n                    {messages.forms[response]}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-success\" onClick={submitForm}>\r\n                    <i className=\"fas fa-save\"></i> Save\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import { isEmpty } from \"lodash\";\r\nimport React, { Fragment, useState } from \"react\";\r\n\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { deleteSubscriber } from \"../helpers/apiCalls\";\r\nimport { useSubscribersData } from \"../hooks/useSubscribersData\";\r\nimport { DeleteModal } from \"./components/modals/DeleteModal\";\r\n\r\nconst {\r\n  SUBSCRIBERS: { DELETE_SUBSCRIBER, CURRENT_SUBSCRIBER },\r\n} = ACTIONS;\r\n\r\nexport const Subscribers = () => {\r\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\r\n\r\n  const { subscriber, subscribers, dispatch, setUpdateData } =\r\n    useSubscribersData();\r\n\r\n  const isLoading = !subscribers || isEmpty(subscribers);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && (\r\n        <div className=\"w-100\">\r\n          <h2 className=\"text-center\">Subscribers</h2>\r\n\r\n          <ul className=\"list-group text-center mt-3\">\r\n            {subscribers.map((item, key) => (\r\n              <li key={key} className=\"list-group-item\">\r\n                {`${item.email} `}\r\n\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => {\r\n                    dispatch({\r\n                      type: CURRENT_SUBSCRIBER,\r\n                      payload: {\r\n                        subscriber: { id: item._id, title: item.email },\r\n                      },\r\n                    });\r\n                    setIsDeleteOpen(true);\r\n                  }}\r\n                >\r\n                  <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          {isDeleteOpen && (\r\n            <DeleteModal\r\n              id={subscriber.id}\r\n              title={subscriber.title}\r\n              setIsDeleteOpen={setIsDeleteOpen}\r\n              dispatch={dispatch}\r\n              action={DELETE_SUBSCRIBER}\r\n              call={deleteSubscriber}\r\n              setUpdateData={setUpdateData}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { CoreReducerContext } from \"../../reducers/core\";\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { getSubscribers } from \"../helpers/apiCalls\";\r\n\r\nexport const useSubscribersData = () => {\r\n  const [updateData, setUpdateData] = useState(false);\r\n\r\n  const { state, dispatch } = useContext(CoreReducerContext);\r\n\r\n  const { subscribers, subscriber } = state;\r\n\r\n  useEffect(() => {\r\n    getSubscribers().then((response) => {\r\n      dispatch({\r\n        type: ACTIONS.SUBSCRIBERS.GET_SUBSCRIBERS,\r\n        payload: { subscribers: response.data.subscriber },\r\n      });\r\n\r\n      setUpdateData(false);\r\n    });\r\n  }, [updateData, dispatch]);\r\n\r\n  return { subscriber, subscribers, dispatch, setUpdateData };\r\n};\r\n","import { isEmpty } from \"lodash\";\r\nimport React, { Fragment, useState } from \"react\";\r\n\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { createPage, deletePage, editPage } from \"../helpers/apiCalls\";\r\nimport { usePagesData } from \"../hooks/usePagesData\";\r\nimport { AddEditPostPageModal } from \"./components/modals/AddEditPostPageModal\";\r\nimport { DeleteModal } from \"./components/modals/DeleteModal\";\r\n\r\nconst {\r\n  PAGES: { CREATE_PAGE, EDIT_PAGE, DELETE_PAGE, CURRENT_PAGE },\r\n} = ACTIONS;\r\n\r\nexport const Pages = () => {\r\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\r\n  const [isAddEditOpen, setIsAddEditOpen] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const { pages, page, dispatch, setUpdateData } = usePagesData();\r\n\r\n  const isLoading = !pages || isEmpty(pages);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && (\r\n        <div className=\"w-100\">\r\n          <h2 className=\"text-center\">All Pages</h2>\r\n\r\n          <button\r\n            className=\"btn btn-light mt-4\"\r\n            onClick={() => {\r\n              setIsEdit(false);\r\n              setIsAddEditOpen(true);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> New Page\r\n          </button>\r\n\r\n          <ul className=\"mt-4 p-0\">\r\n            {pages.map((page, key) => (\r\n              <li className=\"card mt-2 p-3\" key={key} value={page.title}>\r\n                <div className=\"card-body row\">\r\n                  <div className=\"col-11\">\r\n                    <div className=\"card-title border-bottom pb-2 font-weight-bold\">\r\n                      {page.title}\r\n                    </div>\r\n                    <div className=\"card-subtitle text-muted\">\r\n                      {page.subtitle}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex flex-column ml-auto border-left pl-4\">\r\n                    <button\r\n                      onClick={() => {\r\n                        dispatch({\r\n                          type: CURRENT_PAGE,\r\n                          payload: {\r\n                            page,\r\n                          },\r\n                        });\r\n                        setIsEdit(true);\r\n                        setIsAddEditOpen(true);\r\n                      }}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      <i className=\"fas fa-pen\"></i>\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"btn btn-danger mt-2\"\r\n                      onClick={() => {\r\n                        dispatch({\r\n                          type: CURRENT_PAGE,\r\n                          payload: {\r\n                            page: {\r\n                              id: page._id,\r\n                              title: `page: ${page.title}`,\r\n                            },\r\n                          },\r\n                        });\r\n                        setIsDeleteOpen(true);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          {isAddEditOpen && (\r\n            <AddEditPostPageModal\r\n              data={{ content: page, component: \"page\" }}\r\n              isEdit={isEdit}\r\n              setIsEdit={setIsEdit}\r\n              setIsAddEditOpen={setIsAddEditOpen}\r\n              dispatch={dispatch}\r\n              action={isEdit ? EDIT_PAGE : CREATE_PAGE}\r\n              call={isEdit ? editPage : createPage}\r\n              setUpdateData={setUpdateData}\r\n            />\r\n          )}\r\n\r\n          {isDeleteOpen && (\r\n            <DeleteModal\r\n              id={page.id}\r\n              title={page.title}\r\n              setIsDeleteOpen={setIsDeleteOpen}\r\n              dispatch={dispatch}\r\n              action={DELETE_PAGE}\r\n              call={deletePage}\r\n              setUpdateData={setUpdateData}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { CoreReducerContext } from \"../../reducers/core\";\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { getComments } from \"../helpers/apiCalls\";\r\n\r\nexport const useCommentsData = () => {\r\n  const [updateData, setUpdateData] = useState(false);\r\n  const { state, dispatch } = useContext(CoreReducerContext);\r\n\r\n  const { comments, comment } = state;\r\n\r\n  useEffect(() => {\r\n    getComments().then((response) => {\r\n      dispatch({\r\n        type: ACTIONS.COMMENTS.GET_COMMENTS,\r\n        payload: {\r\n          comments: response.data.comments,\r\n        },\r\n      });\r\n      setUpdateData(false);\r\n    });\r\n  }, [updateData, dispatch]);\r\n\r\n  return { comments, comment, dispatch, setUpdateData };\r\n};\r\n","import { isEmpty } from \"lodash\";\r\nimport React, { Fragment, useState } from \"react\";\r\n\r\nimport { ACTIONS } from \"../actions/actions\";\r\nimport { deleteComment } from \"../helpers/apiCalls\";\r\nimport { useCommentsData } from \"../hooks/useCommentsData\";\r\nimport { usePostsData } from \"../hooks/usePostsData\";\r\nimport { DeleteModal } from \"./components/modals/DeleteModal\";\r\n\r\nconst {\r\n  COMMENTS: { DELETE_COMMENT, CURRENT_COMMENT },\r\n} = ACTIONS;\r\n\r\nexport const Comments = () => {\r\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\r\n\r\n  const { posts } = usePostsData();\r\n  const { comments, comment, dispatch, setUpdateData } = useCommentsData();\r\n\r\n  const isLoading = !comments || isEmpty(comments) || !posts;\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && (\r\n        <div className=\"w-100\">\r\n          <h2 className=\"text-center\">All Comments</h2>\r\n\r\n          <ul className=\"mt-4 p-0\">\r\n            {comments.map((item, key) => (\r\n              <li className=\"card mt-2 p-3\" key={key}>\r\n                <div className=\"card-body row\">\r\n                  <div className=\"col-11\">\r\n                    <div className=\"card-title border-bottom pb-2 font-weight-bold\">\r\n                      {item.user}\r\n                    </div>\r\n                    <div className=\"card-subtitle text-muted\">\r\n                      {item.comment}\r\n                    </div>\r\n                    {posts\r\n                      .filter((art) => art._id === item.post)\r\n                      .map((art, key) => (\r\n                        <div className=\"card-subtitle mt-3\" key={key}>\r\n                          <strong>Post: </strong>\r\n                          {art.title}\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                  <div className=\"d-flex flex-column ml-auto border-left pl-4\">\r\n                    <button\r\n                      className=\"btn btn-danger mt-2\"\r\n                      onClick={() => {\r\n                        dispatch({\r\n                          type: CURRENT_COMMENT,\r\n                          payload: {\r\n                            comment: { id: item._id, title: item.comment },\r\n                          },\r\n                        });\r\n                        setIsDeleteOpen(true);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          {isDeleteOpen && (\r\n            <DeleteModal\r\n              id={comment.id}\r\n              title={comment.title}\r\n              setIsDeleteOpen={setIsDeleteOpen}\r\n              dispatch={dispatch}\r\n              action={DELETE_COMMENT}\r\n              call={deleteComment}\r\n              setUpdateData={setUpdateData}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Categories } from \"./Categories\";\r\nimport { Posts } from \"./Posts\";\r\nimport { User } from \"./User\";\r\nimport { Menu } from \"./Menu\";\r\nimport { Subscribers } from \"./Subscribers\";\r\nimport { Pages } from \"./Pages\";\r\nimport { Comments } from \"./Comments\";\r\nimport { setLocalStorageForComponent } from \"../helpers/constants\";\r\nimport { useAuthentication } from \"../hooks/useAuthentication\";\r\n\r\nexport const Admin = () => {\r\n  const [component, setComponent] = useState(setLocalStorageForComponent);\r\n\r\n  const { authenticated } = useAuthentication();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!authenticated) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [authenticated, history]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"component\", JSON.stringify(component));\r\n  }, [component]);\r\n\r\n  const setButtonActive = (activeComponent) =>\r\n    activeComponent === component\r\n      ? {\r\n          backgroundColor: \"#2271B1\",\r\n          border: \"#2271B1\",\r\n          color: \"#fff\",\r\n        }\r\n      : {};\r\n\r\n  const components = () => {\r\n    switch (component) {\r\n      case \"posts\":\r\n        return <Posts />;\r\n      case \"pages\":\r\n        return <Pages />;\r\n      case \"categories\":\r\n        return <Categories />;\r\n      case \"user\":\r\n        return <User />;\r\n      case \"comments\":\r\n        return <Comments />;\r\n      case \"menu\":\r\n        return <Menu />;\r\n      case \"subscribers\":\r\n        return <Subscribers />;\r\n\r\n      default:\r\n        return <Posts />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {authenticated && (\r\n        <div className=\"h-100 container-fluid admin\">\r\n          <div className=\"row h-100\">\r\n            <ul\r\n              className=\"overflow-auto p-3 col-lg-2 col-md-3 col-sm-4 h-100 bg-dark d-flex flex-column justify-content-center mb-0\"\r\n              style={{ listStyleType: \"none\" }}\r\n            >\r\n              <h2 className=\"text-white mt-4 text-center\">Admin Panel</h2>\r\n              <li className=\"mt-auto\">\r\n                <a\r\n                  href=\"/\"\r\n                  className=\"d-block link text-center text-white text-decoration-none\"\r\n                >\r\n                  <i className=\"fas fa-arrow-alt-circle-left text-white\"></i>{\" \"}\r\n                  Back to Homepage\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"mt-3\">\r\n                <button\r\n                  className=\"text-sm-right btn btn-light w-100 shadow-none\"\r\n                  onClick={() => setComponent(\"posts\")}\r\n                  style={setButtonActive(\"posts\")}\r\n                  name=\"posts\"\r\n                >\r\n                  <i className=\"fas fa-copy\"></i> Posts\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"mt-3\">\r\n                <button\r\n                  className=\"text-sm-right btn btn-light w-100 shadow-none\"\r\n                  onClick={() => setComponent(\"pages\")}\r\n                  style={setButtonActive(\"pages\")}\r\n                  name=\"pages\"\r\n                >\r\n                  <i className=\"fas fa-copy\"></i> Pages\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"mt-3\">\r\n                <button\r\n                  className=\"text-sm-right btn btn-light w-100 shadow-none\"\r\n                  onClick={() => setComponent(\"categories\")}\r\n                  style={setButtonActive(\"categories\")}\r\n                  name=\"categories\"\r\n                >\r\n                  <i className=\"fas fa-folder\"></i> Categories\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"mt-3\">\r\n                <button\r\n                  className=\"text-sm-right btn btn-light w-100 shadow-none\"\r\n                  onClick={() => setComponent(\"user\")}\r\n                  style={setButtonActive(\"user\")}\r\n                  name=\"user\"\r\n                >\r\n                  <i className=\"fas fa-user\"></i> User Account\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"mt-3\">\r\n                <button\r\n                  className=\"text-sm-right btn btn-light w-100 shadow-none\"\r\n                  onClick={() => setComponent(\"menu\")}\r\n                  style={setButtonActive(\"menu\")}\r\n                  name=\"menu\"\r\n                >\r\n                  <i className=\"fas fa-ellipsis-h\"></i> Menu\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"mt-3\">\r\n                <button\r\n                  className=\"text-sm-right btn btn-light w-100 shadow-none\"\r\n                  onClick={() => setComponent(\"subscribers\")}\r\n                  style={setButtonActive(\"subscribers\")}\r\n                  name=\"subscribers\"\r\n                >\r\n                  <i className=\"fas fa-user\"></i> Subscribers\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"my-3\">\r\n                <button\r\n                  className=\"text-sm-right btn btn-light w-100 shadow-none\"\r\n                  onClick={() => setComponent(\"comments\")}\r\n                  style={setButtonActive(\"comments\")}\r\n                  name=\"comments\"\r\n                >\r\n                  <i className=\"fas fa-comments\"></i> Comments\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"mt-auto align-self-end\">\r\n                <a className=\"btn btn-danger\" href={`/api/auth/logout`}>\r\n                  Logout <i className=\"fas fa-sign-out-alt\"></i>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"col-lg-10 col-md-9 col-sm-8 p-4 h-100 overflow-auto\">\r\n              {components()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { login } from \"./helpers/apiCalls\";\r\nimport { useAuthentication } from \"./hooks/useAuthentication\";\r\n\r\nexport const Login = () => {\r\n  const { authenticated, setUpdateData } = useAuthentication();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (authenticated) {\r\n      history.push(\"/admin\");\r\n    }\r\n  }, [authenticated, history]);\r\n\r\n  const handleSubmitForm = (values) => {\r\n    setUpdateData(true);\r\n    login(values).then((res) => {\r\n      if (res.data === \"USER_LOGGED\") {\r\n        history.push(\"/admin\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const initialValues = { email: \"\", password: \"\" };\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={handleSubmitForm}>\r\n      {({ submitForm }) =>\r\n        !authenticated && (\r\n          <div className=\"container h-100 d-flex\">\r\n            <div className=\"jumbotron m-auto\">\r\n              <div className=\"container\">\r\n                <h3 className=\"display-6\">Please Sign in</h3>\r\n              </div>\r\n              <Form className=\"mt-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Email</label>\r\n                  <Field\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <Field\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group text-center\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-success\"\r\n                    onClick={submitForm}\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </Formik>\r\n  );\r\n};\r\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { first } from \"lodash\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  bufferImageToString,\r\n  commentDate,\r\n  itemNameFromLink,\r\n  postDate,\r\n} from \"./helpers/constants\";\r\nimport { getInstagramFeed } from \"./helpers/apiCalls\";\r\nimport { SubscriptionForm } from \"./components/SubscriptionForm\";\r\nimport { useAuthentication } from \"./hooks/useAuthentication\";\r\nimport { usePostsData } from \"./hooks/usePostsData\";\r\nimport { PageContext } from \"../PageContext\";\r\nimport { useCommentsData } from \"./hooks/useCommentsData\";\r\n\r\nexport const Post = () => {\r\n  const [feed, setFeed] = useState();\r\n  const location = useLocation();\r\n  const { authenticated } = useAuthentication();\r\n  const { posts } = usePostsData();\r\n  const { comments } = useCommentsData();\r\n  const { categories, menu, pages } = useContext(PageContext);\r\n\r\n  useEffect(() => {\r\n    getInstagramFeed().then((res) => {\r\n      setFeed(res.data.data);\r\n    });\r\n  }, []);\r\n\r\n  const isLoading = !menu || !categories || !posts || !pages;\r\n\r\n  const currentPost =\r\n    !isLoading &&\r\n    posts.find((item) => item.title === itemNameFromLink(location));\r\n\r\n  const relatedPosts =\r\n    !isLoading &&\r\n    posts\r\n      .filter(\r\n        (item) =>\r\n          item.category === currentPost.category && item._id !== currentPost._id\r\n      )\r\n      .slice(0, 3);\r\n\r\n  const currentPostComments =\r\n    comments && comments.filter((item) => item.post === currentPost._id);\r\n\r\n  const currentPostCategory =\r\n    !isLoading && categories.find((item) => item._id === currentPost.category);\r\n\r\n  const firstPostInArray = !isLoading && first(posts);\r\n\r\n  const postComments = () => {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"COMMENTS__display-title\">Comments</div>\r\n\r\n        {currentPostComments.map((item, key) => (\r\n          <div className=\"COMMENTS__display\" key={key}>\r\n            <div className=\"COMMENTS__display-name\">{item.user}</div>\r\n            <p className=\"POST__date COMMENTS__display-date\">\r\n              {commentDate(item.createdAt)}\r\n            </p>\r\n            <div className=\"COMMENTS__display-comment\">{item.comment}</div>\r\n            {authenticated && (\r\n              <a\r\n                className=\"COMMENTS__display-delete right\"\r\n                href={`/api/comments/delete/${item._id}`}\r\n              >\r\n                <i className=\"fas fa-trash\"></i>\r\n              </a>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading ? (\r\n        <div className=\"CONTENT\">\r\n          <div className=\"POST__center\">\r\n            <img\r\n              className=\"POST__image\"\r\n              src={bufferImageToString(\r\n                currentPost.image.mimetype,\r\n                currentPost.image.file.data\r\n              )}\r\n              alt=\"\"\r\n            />\r\n            <p className=\"POST__date\">{postDate(currentPost.createdAt)}</p>\r\n            <h2 className=\"POST__title\">{currentPost.title}</h2>\r\n            <a\r\n              className=\"POST__category\"\r\n              href={`/categories/${currentPostCategory.title}`}\r\n            >\r\n              {currentPostCategory.title}\r\n            </a>\r\n            <div className=\"POST\">\r\n              <div className=\"POST__info\">\r\n                <div className=\"POST__description\">\r\n                  {currentPost.description}\r\n                </div>\r\n                <p className=\"POST__content\">{currentPost.content}</p>\r\n\r\n                <form\r\n                  className=\"COMMENTS\"\r\n                  method=\"POST\"\r\n                  action={`/api/comments/store`}\r\n                >\r\n                  <input type=\"hidden\" name=\"post\" value={currentPost._id} />\r\n                  <input\r\n                    className=\"COMMENTS__name\"\r\n                    type=\"text\"\r\n                    required\r\n                    name=\"user\"\r\n                    placeholder=\"Your name\"\r\n                  />\r\n                  <textarea\r\n                    className=\"COMMENTS__comment\"\r\n                    name=\"comment\"\r\n                    required\r\n                    placeholder=\"Your comment\"\r\n                  ></textarea>\r\n                  <button type=\"submit\" className=\"FOOTER__subscribe-button\">\r\n                    Comment!\r\n                  </button>\r\n                </form>\r\n\r\n                {currentPostComments && postComments()}\r\n              </div>\r\n\r\n              <div className=\"POST__sidebar\">\r\n                <div className=\"POST__sidebar-user\">\r\n                  <img\r\n                    className=\"POST__sidebar-image rounded-circle\"\r\n                    height=\"200\"\r\n                    src={bufferImageToString(\r\n                      menu.image.mimetype,\r\n                      menu.image.file.data\r\n                    )}\r\n                    alt=\"\"\r\n                  />\r\n\r\n                  <div className=\"POST__sidebar-author\">\r\n                    {currentPost.author}\r\n                  </div>\r\n\r\n                  <div className=\"POST__sidebar-about\">{menu.sidebar}</div>\r\n                </div>\r\n                <div className=\"FOOTER__subscribe POST__sidebar-subscribe\">\r\n                  <div className=\"FOOTER__information text-left\">\r\n                    <h2 className=\"FOOTER__information-title\">Subscribe</h2>\r\n                    <p className=\"FOOTER__information-text\">\r\n                      Get updates on my lifestyle!\r\n                    </p>\r\n                    <p id=\"message\" className=\"FOOTER__information-text d-none\">\r\n                      User are already exist!\r\n                    </p>\r\n                  </div>\r\n\r\n                  <SubscriptionForm />\r\n                </div>\r\n                <div className=\"POST__sidebar-recent\">Most Recent Post</div>\r\n\r\n                <a\r\n                  className=\"POST__sidebar-recent-link\"\r\n                  href={`/post/${firstPostInArray.title}`}\r\n                >\r\n                  <img\r\n                    className=\"POST__sidebar-recent-image\"\r\n                    src={bufferImageToString(\r\n                      firstPostInArray.image.mimetype,\r\n                      firstPostInArray.image.file.data\r\n                    )}\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"POST__sidebar-recent-title\">\r\n                    {firstPostInArray.title}\r\n                  </div>\r\n                </a>\r\n\r\n                <a\r\n                  className=\"POST__category POST__sidebar-recent-category\"\r\n                  href={`/categories/${currentPostCategory.title}`}\r\n                >\r\n                  {currentPostCategory.title}\r\n                </a>\r\n\r\n                <div className=\"POST__sidebar-recent-instagram\">Instagram</div>\r\n\r\n                <a\r\n                  className=\"POST__sidebar-recent-instagram-link\"\r\n                  href={menu.socials.instagram}\r\n                >\r\n                  @ugne.online\r\n                </a>\r\n\r\n                <div className=\"POST__sidebar-recent-instagram-pictures\">\r\n                  {feed &&\r\n                    feed.slice(0, 4).map((item, key) => (\r\n                      <a\r\n                        className=\"POST__sidebar-recent-instagram-permalink\"\r\n                        key={key}\r\n                        href={item.permalink}\r\n                      >\r\n                        <img\r\n                          className=\"POST__sidebar-recent-instagram-image\"\r\n                          src={item.media_url}\r\n                          alt=\"\"\r\n                        />\r\n                      </a>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"RELATED\">\r\n            <div className=\"CONTENT__blog-post-title RELATED__title text-center\">\r\n              Related Posts\r\n            </div>\r\n            <ul className=\"RELATED__posts\">\r\n              {relatedPosts.map((item, key) => (\r\n                <li className=\"CONTENT__blog-post\" key={key}>\r\n                  <a\r\n                    className=\"CONTENT__blog-post-image RELATED__posts-post\"\r\n                    href={`/post/${item.title}`}\r\n                    style={{\r\n                      backgroundImage: `url(${bufferImageToString(\r\n                        item.image.mimetype,\r\n                        item.image.file.data\r\n                      )})`,\r\n                    }}\r\n                  >\r\n                    {\"\"}\r\n                  </a>\r\n                  <a\r\n                    className=\"CONTENT__blog-post-link\"\r\n                    href={`/post/${item.title}`}\r\n                  >\r\n                    <p className=\"CONTENT__blog-post-date\">\r\n                      {postDate(item.createdAt)}\r\n                    </p>\r\n                    <div className=\"CONTENT__blog-post-title RELATED__posts-title\">\r\n                      {item.title}\r\n                    </div>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <span className=\"LOADING\">Loading...</span>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { bufferImageToString, itemNameFromLink } from \"./helpers/constants\";\r\nimport { PageContext } from \"../PageContext\";\r\n\r\nexport const Page = () => {\r\n  const location = useLocation();\r\n\r\n  const { categories, pages, menu } = useContext(PageContext);\r\n\r\n  const isLoading = !menu || !pages || !categories;\r\n\r\n  const currentPage =\r\n    !isLoading &&\r\n    pages.find((item) => item.title === itemNameFromLink(location));\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading ? (\r\n        <div className=\"CONTENT\">\r\n          {!currentPage.image && !currentPage.subtitle ? (\r\n            <div className=\"PAGE\">\r\n              <div className=\"PAGE__title no-image\">{currentPage.title}</div>\r\n              <div className=\"PAGE__content no-image\">\r\n                {currentPage.content}\r\n              </div>\r\n\r\n              <a href={`mailto:${menu.email}`} className=\"PAGE__email\">\r\n                {menu.email}\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <div className=\"PAGE\">\r\n              <div className=\"PAGE__title image\">{currentPage.title}</div>\r\n              <img\r\n                className=\"PAGE__image\"\r\n                src={bufferImageToString(\r\n                  currentPage.image.mimetype,\r\n                  currentPage.image.file.data\r\n                )}\r\n                alt=\"\"\r\n              />\r\n              <div className=\"PAGE__center\">\r\n                <div className=\"PAGE__subtitle\">{currentPage.subtitle}</div>\r\n                <div className=\"PAGE__content image\">{currentPage.content}</div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <span className=\"LOADING\">Loading...</span>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  bufferImageToString,\r\n  itemNameFromLink,\r\n  postDate,\r\n} from \"./helpers/constants\";\r\nimport { usePostsData } from \"./hooks/usePostsData\";\r\nimport { PageContext } from \"../PageContext\";\r\n\r\nexport const Category = () => {\r\n  const location = useLocation();\r\n\r\n  const { posts } = usePostsData();\r\n  const { categories, menu, pages } = useContext(PageContext);\r\n\r\n  const isLoading = !categories || !posts || !menu || !pages;\r\n\r\n  const currentCategory =\r\n    !isLoading &&\r\n    categories.find((item) => item.title === itemNameFromLink(location));\r\n\r\n  const categoryPosts =\r\n    !isLoading && posts.filter((item) => item.category === currentCategory._id);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading ? (\r\n        <div className=\"CONTENT\">\r\n          <h2 className=\"CONTENT__category-title\">\r\n            All in \"{currentCategory.title}\"\r\n          </h2>\r\n          <ul className=\"CONTENT__blog\">\r\n            {categoryPosts.map((item) => (\r\n              <li\r\n                className=\"CONTENT__blog-post\"\r\n                key={item._id}\r\n                value={item.title}\r\n              >\r\n                <a\r\n                  className=\"CONTENT__blog-post-image\"\r\n                  href={`/post/${item.title}`}\r\n                  style={{\r\n                    backgroundImage: `url(${bufferImageToString(\r\n                      item.image.mimetype,\r\n                      item.image.file.data\r\n                    )})`,\r\n                  }}\r\n                >\r\n                  {\"\"}\r\n                </a>\r\n                <p className=\"CONTENT__blog-post-date\">\r\n                  {postDate(item.createdAt)}\r\n                </p>\r\n                <a\r\n                  className=\"CONTENT__blog-post-link\"\r\n                  href={`/post/${item.title}`}\r\n                >\r\n                  <h2 className=\"CONTENT__blog-post-title\">{item.title}</h2>\r\n                </a>\r\n                <p className=\"CONTENT__blog-post-category\">\r\n                  {currentCategory.title}\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <span className=\"LOADING\">Loading...</span>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { Homepage } from \"./components/Homepage\";\r\nimport { Admin } from \"./components/admin/Admin\";\r\nimport { Login } from \"./components/Login\";\r\nimport { Post } from \"./components/Post\";\r\nimport { Page } from \"./components/Page\";\r\nimport { Category } from \"./components/Category\";\r\n\r\nimport { CoreReducerProvider } from \"./reducers/core\";\r\nimport { PageProvider } from \"./PageContext\";\r\n\r\nimport \"./scss/app.scss\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <CoreReducerProvider>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <PageProvider>\r\n              <Homepage />\r\n            </PageProvider>\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/categories/:category\"\r\n          render={() => (\r\n            <PageProvider>\r\n              <Category />\r\n            </PageProvider>\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/post/:title\"\r\n          render={() => (\r\n            <PageProvider>\r\n              <Post />\r\n            </PageProvider>\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/page/:title\"\r\n          render={() => (\r\n            <PageProvider>\r\n              <Page />\r\n            </PageProvider>\r\n          )}\r\n        />\r\n        <Route exact path=\"/admin\" component={Admin} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n      </Switch>\r\n    </CoreReducerProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.hydrate(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}